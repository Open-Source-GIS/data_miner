unreleased

* Enhancements

  * Don't mess with DataMiner::Run.perform, which some people use in conjunction with Resque
  * Don't lock DataMiner::Run#perform. Provide instructions for how people can do this manually.

* Bug fixes

  * Don't blow up trying to get current database name on SQLite3

2.0.3 / 2012-05-07

* Enhancements

  * Rename :nullify to :nullify_blank_strings to clarify that it only affects textual columns and means "treat blank input as null".
  * Don't try to set units for a column that is currently nil (thanks @ihough)

* Bug fixes

  * Don't blow up if mass-assignment rules are strict.
  * Don't accidentally set a numeric column to 0.0 when the input is blank or nil.

2.0.2 / 2012-05-04

* Breaking changes

  * Import descriptions are no longer optional
  * Import options are no longer optional (but then, they never were)

* Enhancements

  * Real documentation!
  * Make it easier to clear locks with DataMiner::Run.clear_locks
  * Replace class-level mutexes with simple Thread.exclusive calls
  * Simplified DataMiner::Dictionary

2.0.1 / 2012-04-18

* Enhancements

  * DataMiner.run -> DataMiner.perform
  * Some basic tests that don't rely on Earth

* Bug fixes

  * Fix the "call stack" - the thing that keeps infinite loops from occurring
  * Make sure sources get refreshed every time you re-run data miner
  * Make sure dictionaries " " " " " " "

2.0.0 / 2012-04-17

* Breaking changes

  * Renamed data_miner_config to data_miner_script (etc. for class/method naming)
  * Simplify DataMiner.run arguments
      was: DataMiner.run(:resource_names => ['Country'])
      now: DataMiner.run(['Country'])
  * Rename "resources" to "models"
      was: DataMiner.resource_names
      now: DataMiner.model_names
  * Expect procs instead of lambdas (because they are just instance-eval'ed now, Blockenspiel is no longer guessing where to find methods)
      was: :synthesize => lambda { class_method }
      now: :synthesize => proc { Klass.class_method }
  * Use UnicodeUtils to correctly upcase and downcase
  * Use throw/catch instead of exceptions to signal to force a step to stop successfully
      was: DataMiner::Succeed
      now: throw :data_miner_succeed
  * Import steps no longer accept deprecated :table => RemoteTable or :errata => Errata options
  * DataMiner::Run structure has changed (in addition to other internals)

* Enhancements

  * Easy to modify data miner scripts using DataMiner::Script#{append|prepend|append_once|prepend_once}
  * DRYer codebase
  * No longer depends on Blockenspiel
  * Uses UnixUtils instead of its own spawning code
  * Should be threadsafe (no more autoload, has mutexes, more careful/fewer singletons, etc.)

1.1.0
* fixed dependency issues
1.0.0
* bundler and gemspec instead of jeweler
* clear up memory leaks and destructive argument borking
* mostly backwards compatible (but no add_hints! in remote_table transforms, for example)
0.2.6
* Upgrade to remote_table 0.1.6 to handle UTF-8 CSVs and long urls.
0.3.0
* Removed association code... now data_miner focuses on just importing.
* New, simpler DSL
* Upgrade to remote_table 0.2.1 for row_hashes and better blank row handling
* Remove all association-related code
